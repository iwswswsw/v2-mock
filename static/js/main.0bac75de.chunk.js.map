{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","easeOut","enteringScreen","AppBar","MuiAppBar","width","DrawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","SliderDatetime","Slider","marks","value","label","blueOptions","color","greenOptions","redOptions","App","useTheme","useState","setOpen","visibleMesh","setVisibleMesh","Box","sx","CssBaseline","position","Toolbar","Typography","variant","noWrap","component","IconButton","aria-label","edge","onClick","style","defaultValue","step","min","max","height","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","Rectangle","bounds","pathOptions","Drawer","flexShrink","anchor","direction","Divider","List","ListItem","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Leaflet","Icon","Default","imagePath","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bac75de.chunk.js","sourcesContent":["import { useState } from 'react';\nimport Slider, { SliderProps } from '@mui/material/Slider';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { MapContainer, TileLayer, Marker, Popup, Rectangle } from 'react-leaflet'\nimport './App.css';\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n    flexGrow: 1,\n    // padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: 0,\n    }),\n  }),\n);\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-start',\n}));\n\nconst SliderDatetime = styled(Slider)<SliderProps>(({ theme }) => ({\n  width: 300,\n  // color: theme.palette.success.main,\n  // '& .MuiSlider-thumb': {\n  //   '&:hover, &.Mui-focusVisible': {\n  //     boxShadow: `0px 0px 0px 8px ${alpha(theme.palette.success.main, 0.16)}`,\n  //   },\n  //   '&.Mui-active': {\n  //     boxShadow: `0px 0px 0px 14px ${alpha(theme.palette.success.main, 0.16)}`,\n  //   },\n  // },\n}));\n\nconst marks = [\n  {\n    value: 10,\n    label: '1時間前',\n  },\n  {\n    value: 20,\n    label: '現在',\n  },\n  {\n    value: 30,\n    label: '1時間後',\n  },\n  {\n    value: 40,\n    label: '2',\n  },\n  {\n    value: 50,\n    label: '3',\n  },\n];\n\nconst blueOptions = { color: 'blue' };\nconst greenOptions = { color: 'green' };\nconst redOptions = { color: 'red' };\n\nconst App = () =>  {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [visibleMesh, setVisibleMesh] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setVisibleMesh(event.target.checked);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap sx={{ flexGrow: 1 }} component=\"div\">\n            v2-mock\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            sx={{ ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Main open={open}>\n        <DrawerHeader />\n        <div style={{padding: '5px 30px'}}>\n          <SliderDatetime\n            defaultValue={20}\n            step={10}\n            marks={marks}\n            min={10}\n            max={50}\n          />\n        </div>\n        <div style={{height: '600px'}}>\n          <MapContainer center={[35.6809591, 139.7673068]} zoom={13} scrollWheelZoom={false}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={[35.6809591, 139.7673068]}>\n              <Popup>\n                A pretty CSS3 popup. <br /> Easily customizable.\n              </Popup>\n            </Marker>\n            {visibleMesh ? (\n              <>\n                <Rectangle bounds={[[35.65, 139.70], [35.68, 139.74]]} pathOptions={blueOptions} />\n                <Rectangle bounds={[[35.65, 139.74], [35.68, 139.78]]} pathOptions={greenOptions} />\n                <Rectangle bounds={[[35.65, 139.78], [35.68, 139.82]]} pathOptions={greenOptions} />\n                <Rectangle bounds={[[35.68, 139.70], [35.71, 139.74]]} pathOptions={blueOptions} />\n                <Rectangle bounds={[[35.68, 139.74], [35.71, 139.78]]} pathOptions={redOptions} />\n                <Rectangle bounds={[[35.68, 139.78], [35.71, 139.82]]} pathOptions={blueOptions} />\n                <Rectangle bounds={[[35.71, 139.70], [35.74, 139.74]]} pathOptions={blueOptions} />\n                <Rectangle bounds={[[35.71, 139.74], [35.74, 139.78]]} pathOptions={greenOptions} />\n                <Rectangle bounds={[[35.71, 139.78], [35.74, 139.82]]} pathOptions={blueOptions} />\n              </>\n              ) : (<></>)\n            }\n            \n          </MapContainer>\n        </div>\n      </Main>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          <ListItem>\n            <FormGroup>\n              <FormControlLabel control={\n                <Switch\n                  checked={visibleMesh}\n                  onChange={handleChange}\n                />\n              }\n              label=\"メッシュ表示\"\n              />\n            </FormGroup>\n          </ListItem>\n        </List>\n      </Drawer>\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Leaflet from 'leaflet'\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nLeaflet.Icon.Default.imagePath =\n  '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}